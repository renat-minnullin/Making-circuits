"""Данная программа должна выполнять расчет цепей переменного/постоянного/несинусоидального тока"""
""" 
---Важно!
    1) Так как в Tkinter ширина измеряется в пикселях и нулях (10 кегль), то все переменные width_, height_ и т.д. должны
    быть в пикселях, и переходом //10 переводиться в ширину виджета
    2) Направление ветви должно быть только у провода, но не у прикрепленного к нему элемента
---CТОП-МЫСЛИ: 

    !!! Рассмотреть возможность, что при создании проводов ветви и провода автоматически разворачиваются соответствующе,
    чтобы не было разных направлений проводов и ветвей. Для этого в программе reload_dates изменить все случаи добавления/удаления
    провода, с учетом синхронизирования. Так как нет тестов, то проверить каждое изменение в ручную
    
    Мб это перенсети в reload_dates:
    -Работа с ветвями: (во всех случаях после установки направления провода происходит перевод на направление ветви, после которого устанавливается это направление)
        1) При задании направления провода, все остальные направления ветви исчезают и принимается направление провода, при этом
            а) если направления не было - принимается направление провода last
            б) если направление ветви было, то оно переводится на направление провода и берется противоположное
        2) При изменении направления провода,  направления провода меняется на противоположное
        3) При удалении провода:
            а) если удаляется направляющий провод - у появившихся ветвей отсутствует направление 
            б) если удаляется не направляющий провод - направление остается только у ветви с направляющим проводом
            (Для удаления необходимо рассмотреть случай, когда дана всего одна ветвь (замкнутая))
        4) При удлинении ветви, направление ветви переносится на удлиняющий провод
        5) При разрывании ветви узлом - направление остается только у ветви с направляющим проводом и ветви разрывающей
        6) При отключении узла - направление ветви переносится на всю вновь подключенную ветвь
        7) При создании элемента поверх провода с направлением, графически направление прорисовывается на элемента

     - заметить обычные tuple в FrameInfoElement и в классах элементов на namedtuple - кортежи, которые указывают,
     что именно лежит в каждом из их индексов
     - Сделать отработку изменения массива ветвей при удалении провода
     - Убрать возможность менять направление провода при активированной moving_line
     - При создании элемента на проводе с выставленным током, ток исчезает (!!!!!!!!!)
    
---Необходимые довершения:
    - Изменить FrameInfoElement: в переменных self.frame_of_group_cur_vol и self.frame_of_group_res_con убери bg и увидишь проблему:
    из-за разности в размерах, строки едут
    
    - Сделать возможность менять один вид элемента на другой при нажатии на кнопку
    -Запретить выделение элемента, когда запущена moving_line, либо сделать так, что при его удалении (когда 
    выбрнаыый зажим в близи с линией) была возможность ее снова достроить
    -Положение: цепь нарисована и запущена, ПУСК горит зеленым. После нажатия на какой-либо зажим ПУСК должен вновь
    становиться серым
    -Убрать разноименность в главном коде переменной WIDTH_INFO_FRAME. Сейчас эта переменная отвечает за количество символов
    в данной рамке и в расчете ширины рабочей области переводится коэффициентом 7,65
    -Избавиться от всех буфферных файлов
    -Избавиться от ненужных глобальных переменных на примере btns_elements_of_group: в избавлении от moving_wire_line может
    помочь система параметров tags от tkinter
    -Облегчить подпрограмму reload_branches, все случаи можно рассмотреть более сжато
---Features:
    -Добавить открытие настроек через основную программу и виджет TOPLEVEL
    - В FrameInfoElement сделать универсальный метод для любого вида расчета цепей( переходные, магнитные и тп.)
    -В options_window.py сделать сохранение выбранных параметров
    -Добавить возможность пользователю изменять full_id элемента
    -Добавить дружелюбную среду для программирования дополнительных элементов с тем, чтобы не залазить в код



"""
import sys
import os

sys.path.append(os.getcwd() + '\make_display')
sys.path.append(os.getcwd() + '\make_circuit')
sys.path.append(os.getcwd() + '\make_date_bases')

import make_display

import make_circuit_by_user

import make_date_bases
